import { Component, OnInit } from "@angular/core";
import { FormGroup, FormBuilder, FormArray } from "@angular/forms";
import { Router,ActivatedRoute } from "@angular/router";
import { BehaviorSubject, Subject } from "rxjs";
@Component({
  selector: "app-side-bar",
  templateUrl: "./side-bar.component.html",
  styleUrls: ["./side-bar.component.css"],
})
export class SideBarComponent implements OnInit {
  activeDaySelection: number;
  days = [
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
    "Sunday",
  ];

  end_times: any = [];

  minutesInterval: number = 1; //minutes interval
  start_times: any = []; // time array
  startTime: number = 9; // start time
  // ap: any = ['AM', 'PM']; // AM-PM

  form: FormGroup;
  formData: any;
  selectedOption: any;
  selectedDay: any;
  control: any;
  daySelected: any;
  formArrayValues: any;
  jsonFormArrayValue: any;
  clearFormArray: FormArray;
  thirtyMinIndex: number;
  selectedOptionIndex: number;
  addIndex: any;
  selectedEndoption: any;
  timeChanged: BehaviorSubject<any> = new BehaviorSubject([]);
  findFirstInd: number;
  findLastInd: number;
  removeBeforeFirstInd: number;
  removeAfterLastInd: number;
  constructor(private router: Router, private fb: FormBuilder, private route:ActivatedRoute) {}

  ngOnInit(): void {
    for (var i = 0; this.startTime < 24 * 60; i++) {
      var hours = Math.floor(this.startTime / 60);
      var minutes = this.startTime % 60;
      this.start_times[i] = ("0" + hours).slice(-2) + ":" + ("0" + minutes).slice(-2);
      // this.times[i] = ("0" + (hours % 12)).slice(-2) + ':' + ("0" + minutes).slice(-2) + this.ap[Math.floor(hours/12)];
      this.startTime = this.startTime + this.minutesInterval;
    }

    this.findFirstInd = this.start_times.indexOf("09:00");
    //console.log(findFirstInd);
    this.findLastInd = this.start_times.indexOf("11:00");
    //console.log(findLastInd);

    this.removeBeforeFirstInd = this.start_times.splice(0, 531);
    //console.log(removeBeforeFirstInd);
    this.removeAfterLastInd = this.start_times.splice(840);
    //console.log(removeAfterLastInd);
    this.end_times = this.start_times;
    console.log("Times:", this.end_times);

    //console.log(this.times);

    this.form = this.fb.group({
      formArray: this.fb.array([this.getUnit()]),
    });
  }

  private getUnit() {
    return this.fb.group({
      starttime: [""],
      endtime: [""],
    });
  }

  daysListClick(index: number, value: string) {
    //alert("clicked");
    this.activeDaySelection = index;
    console.log(this.activeDaySelection);

    this.selectedDay = value;
    console.log(this.selectedDay);

    this.clearFormArray = <FormArray>this.form.controls["formArray"];
    this.clearFormArray.clear();

    this.control = <FormArray>this.form.controls["formArray"];
    this.control.push(this.getUnit());

    console.log(this.control);
    this.router.navigate(["/appointments"]);

    //this.formatTime();
  }

  addItem(index: number) {
    // this.form.get('formArray').valueChanges.subscribe((result)=>{
    //   console.log(result.index);
    // });
    // const units = this.form.controls.formArray as FormArray;
    // units.push(this.fb.group({starttime:'',endtime:''}));

    //  let controlIndex = (<FormArray>this.form.get('formArray'));
    //  console.log(controlIndex);
    
    //  Object.keys(controlIndex.value).forEach(element => {
    //    console.log(element);
    //  });
   
     console.log(this.start_times);
     
     
     //console.log(((this.form.get('controls') as FormArray).at(index) as FormGroup).get('starttime'));
     // let arrayControl = this.form.get('formArray') as FormArray;
     // let controls_id = this.route.snapshot.params['formArray'];
    // console.log(controls_id);
    

    this.control = <FormArray>this.form.controls["formArray"];
    this.control.push(this.getUnit());

    
    // this.times.map((res)=>{
    //   res = this.times;
    //   res.splice(0,this.selectedOptionIndex);
      
    // });
    
    this.selectedOptionIndex += 15;
    this.selectedOption = this.start_times[this.selectedOptionIndex];
    this.start_times.splice(0,this.selectedOptionIndex);
    
    console.log("Times After element adding:", this.selectedOption);
    //this.control.subscribe().next();
    //this.times.splice(0,this.selectedOptionIndex -1);
  }

  removeItem(index: number) {
    const control = <FormArray>this.form.controls["formArray"];
    control.removeAt(index);
    console.log((control.length));
    
  }

  download() {
    this.daySelected = this.selectedDay;
    console.log("Selected Day:", this.daySelected);

    this.formArrayValues = this.control;
    this.jsonFormArrayValue = JSON.stringify(this.formArrayValues.value);
    console.log("FormArrayValues:", JSON.stringify(this.formArrayValues.value));

    this.formData = this.form.controls["control"];
    console.log(this.formData);
  }

  onTimeSelect() {
    //console.log('Selected Option:-=-=', this.selectedOption);
  }

  onChanges($event: string) {
    
    
    this.selectedOptionIndex = this.start_times.indexOf(this.selectedOption);
    this.selectedOptionIndex += 30;
    console.log(this.end_times[this.selectedOptionIndex]);
    this.selectedEndoption = this.end_times[this.selectedOptionIndex];

    console.log("selected Option Index:", this.selectedOptionIndex);
  }
}
